groups:
  - name: overview
    jobs:
      - validate-tfplan
#      - validate-tfapply

resource_types:
  - name: cycloid-resource
    type: docker-image
    source:
      repository: cycloid/cycloid-resource
      tag: ((cycloid_resource_version))

  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: ((terraform_version))

resource:
  - name: infrapolicy
    type: cycloid-resource
    source:
      feature: infrapolicy
      api_key: ((api_key))
      #api_url:
      env: ((env))
      org: ((org))
      project: ((project))

  - name: tfplan
    type: terraform
    icon: terraform
    source:
      env_name: ((env_s3))
      backend_type: s3
      backend_config:
        bucket: ((terraform_storage_bucket_name))
        key: ((project_s3))-((env_s3)).tfstate
        workspace_key_prefix: ((project_s3))
        region: ((aws_default_region))
        access_key: ((aws_access_key))
        secret_key: ((aws_access_key))
      env:
        AWS_ACCESS_KEY_ID: ((aws_access_key))
        AWS_DEFAULT_REGION: ((aws_default_region))
        AWS_SECRET_ACCESS_KEY: ((aws_secret_key))

  # - name: tfstate
  #   type: s3
  #   source:
  #     bucket: ((terraform_storage_bucket_name))
  #     versioned_file: ((test-project))/((tfstate_file))
  #     access_key_id: ((aws_access_key))
  #     secret_access_key: ((aws_access_key))
  #     region:((aws_default_region))

jobs:
  - name: validate-tfplan
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: tfplan
            params:
              output_planfile: true

          - put: infrapolicy
            params:
              tfplan_path: tfplan/plan.json
# - name: validate-tfapply
#   max_in_flight: 1
#   build_logs_to_retain: 10
#   plan:
#     - do:
#       - get: tfstate
#         get_params:
#           output_statefile: true

#       - put: check
#         params:
#           tfplan_path: tfplan/plan.json

