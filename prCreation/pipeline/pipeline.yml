shared:
  - &chat-alert
    author_name: cycloid.io
    author_link: https://www.cycloid.io/
    title_link: ((cycloid_console_url))/organizations/((organization))/projects/((project))/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_ID
    fields:
      - title: Project
        value: ((project))
        short: true
      - title: Environment
        value: ((env))
        short: true

groups:
  - name: overview
    jobs:
      - bump-cli-with-be

resource_types:
  - name: slack-notification
    type: registry-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest
      registry_mirror:
        host: registry-mirror.owl.cycloid.io

resources:
  - name: git_api_tag
    type: git
    icon: git
    source:
      uri: ((git_api_uri))
      branch: ((git_api_branch))
      private_key: ((git_private_key))
      fetch_tags: yes
      tag_regex: 'v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+'

  - name: git_cli_write
    type: git
    icon: git
    source:
      uri: ((git_cli_uri))
      branch: ((git_cli_branch))
      private_key: ((git_private_key))
      
  - name: git_cli_read
    type: git
    icon: git
    source:
      uri: ((git_cli_uri))
      branch: ((git_cli_branch))
      private_key: ((git_private_key))

  # create chat alert in zulip development channel
  - name: chat_alert
    type: slack-notification
    icon: slack
    source:
      url: ((slack_webhook))

jobs:
  - name: bump-cli-with-be
    build_logs_to_retain: 10
    plan:
      - do:
          - get: git_api_tag
            trigger: true

          - get: git_cli_read

          - put: chat_alert
            params:
              attachments:
                - <<: *chat-alert
                  title: "[ New API version detected: PR in progess...]"
                  fallback: "start - DEPLOY of ((project))/((env)) [In progress ...]"
                  color: "#039BE5"

          - task: generate-swagger-client
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: quay.io/goswagger/swagger
                  tag: v0.21.0
              run:
                path: /bin/sh
                args:
                  - '-exc'
                  - |
                    DIR=${PWD}
                    cd cli_code/

                    # generates client using latest swagger in API
                    cp ${DIR}/api_code/swagger.yml .
                    make generate-client

                    # change the client version to match the api tag release
                    export SWAGGER_VERSION=$(cd ${DIR}/api_code && git describe) 
                    echo ${SWAGGER_VERSION} > client/version
                    # Required otherwise we can't delete the folder
                    echo ${SWAGGER_VERSION} > version
                    
                    # configure git        
                    git config --global user.email "devops@cycloid.io"
                    git config --global user.name "Cycloid"

                    # creates new branch to use to create commit
                    git checkout -b ${SWAGGER_VERSION}
                    git add client
                    git commit -m "Bump swagger client to version ${SWAGGER_VERSION}"
              params:
                GOPATH: '/go'
              inputs:
                - name: git_api_tag
                  path: api_code
                - name: git_cli_read
                  path: cli_code
              outputs:
                - name: cli_with_commit
                  path: cli_code
                - name: cli_version
                  path: cli_code/version
                  
          - put: git_cli_write
            params:
              repository: cli_with_commit
              branch: cli_version
              
          - task: create-pr
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: cycloid/github-cli
                  tag: latest
              run:
                path: /bin/sh
                args:
                  - '-exc'
                  - |
                    DIR=${PWD}
                    cd cli_with_commit/

                    # change the client version to match the api tag release
                    export SWAGGER_VERSION=$(cd ${DIR}/api_code && git describe) 
                    echo ${SWAGGER_VERSION} > client/version

                    # creates PR using commit data
                    export PR_URL=$(gh pr create --title "$(git log -1 --pretty=%B)" --body "" --head ${SWAGGER_VERSION} --base ${GITHUB_BASE} --label 'Status: Need review')
                    export PR_NUMBER="${PR_URL//[!0-9]/}"

                    # add change to CHANGELOG.md
                    # check if there's already an entry in the changelog
                    if grep -q "${SWAGGER_VERSION}" CHANGELOG.md;then
                      
                      # an entry exists
                      echo "$(awk 'NR==2{print; \
                          print "  - Update client to version "ENVIRON["SWAGGER_VERSION"]; \
                        print "    ([PR #"ENVIRON["PR_NUMBER"]"](https://github.com/cycloidio/cycloid-cli/pull/"ENVIRON["PR_NUMBER"]"))"}\
                        NR!=2' CHANGELOG.md)" > CHANGELOG.md
                      
                    else
                      
                      # an entry doesn't exist
                      DATE=$(date '+%Y-%m-%d')
                      PR_NUMBER='1'

                      cat << EOF > /tmp/CHANGELOG.md
                      ## [${SWAGGER_VERSION}] _${DATE}_
                      - **CHANGED**
                        - Update client to version ${SWAGGER_VERSION}
                        ([PR #${PR_NUMBER}](https://github.com/cycloidio/cycloid-cli/pull/${PR_NUMBER}))

                      EOF

                      cat CHANGELOG.md >> /tmp/CHANGELOG.md
                      cp /tmp/CHANGELOG.md CHANGELOG.md

                    fi

                    git commit -m "Bump CLI to version ${SWAGGER_VERSION}" CHANGELOG.md

                    # configure git        
                    git config --global user.email "devops@cycloid.io"
                    git config --global user.name "Cycloid"

                    git add CHANGELOG.md
                    git commit -m "Bump CLI to version ${SWAGGER_VERSION}"
                    git push
              params:
                GITHUB_TOKEN: ((github_token))
                GITHUB_BASE: ((git_cli_branch))
                # PR information - optional
                # PR_TITLE="PR title"
                # PR_BODY="PR body"
                # a set of labels separated by comma
                PR_LABELS: 'Status: Need review'
              inputs:
                - name: git_cli
                  path: cli_with_commit
                - name: git_api_tag
                  path: api_code                
                  
              on_success:
                try:
                  put: chat_alert
                  params:
                    attachments:
                      - <<: *chat-alert
                        title: "[SUCCESS]"
                        fallback: "end - PR created at ((github_repo_name)) [SUCCESS]"
                        color: good

              on_failure:
                try:
                  put: chat_alert
                  params:
                    attachments:
                      - <<: *chat-alert
                        title: "[FAIL]"
                        fallback: "end - PR not created at ((github_repo_name)) [FAIL]"
                        color: danger

              on_abort:
                try:
                  put: chat_alert
                  params:
                    attachments:
                      - <<: *chat-alert
                        title: "[ABORT]"
                        fallback: "end - PR not created at ((github_repo_name)) [ABORT]"
                        color: "#039BE5"

          #- put: git_cli_bump
          #  params:
          #    branch: cli_bump
          #    repository: cli_with_commit
